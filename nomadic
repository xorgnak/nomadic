#!/bin/bash

if [ "$1" == "clean" ]; then
    echo "[nomadic] uninstalling..."
    shift
    cd ~/
    rm -fR ~/nomadic
    sudo rm -f /bin/nomadic
    rm -fR ~/cabage
    rm -fR ~/bin
    rm -fR ~/dwm
    rm -fR ~/radio
    rm -fR ~/media
    rm -fR ~/.arduino15
    rm -f .screenrc
    rm -f .irc.el
    redis-cli flushdb > /dev/null
    echo "[nomadic] uninstalled."
    echo "Continuing in 10 seconds.  Press Ctrl-c to stop..."
    sleep 10
fi

echo "[nomadic]"
if [ ! -d ~/nomadic ]; then
	cd ~
	sudo apt-get install -y vlc rtl-sdr fldigi wsjtx gqrx-sdr lingot chirp multimon-ng ax25-apps ax25-tools soundmodem aprx aprsdigi audacity jaaa siggen butt darkice darksnow autoradio musescore mpd mpdtoys mpc ncmpc ncmpcpp mumble mumble-server pitivi gtranscribe espeak-ng-espeak
	git clone --quiet https://github.com/xorgnak/nomadic
else
	cd ~/nomadic && git pull
fi
sudo cp ~/nomadic/nomadic /bin/nomadic
echo "[nomadic] updated."

echo "[nomadic][cabage] "
if [ ! -d ~/cabage ]; then
    su -c "apt install -qq sudo curl git && /sbin/usermod -a -G sudo $USER"
    echo "[nomadic] normalized environment. "
    echo "[nomadic][cabage] get... "
    cd ~;
    git clone --quiet https://github.com/xorgnak/cabage && cd cabage && ./now;
    sudo cp work /bin/work
    echo "[nomadic][cabage] got! "
else
    cd ~/cabage && git pull
fi

if [ "$1" == "node" ]; then
  echo ""
  printf "[nomadic][gui] "
  if [ ! -d ~/dwm ]; then
	printf "get... "
	cd ~;
	git clone --quiet https://github.com/xorgnak/dwm && cd dwm && ./now;
	printf "got! "
  fi
printf "OK."
fi

echo ""
printf "[nomadic][rtc] "
if [ ! `which peerjs` ]; then
	printf "get... "
	sudo apt-get install -y npm > /dev/null
	sudo npm install peer -g
	printf "got! "
fi
printf "OK."

echo ""
printf "[nomadic][iot] "
if [ ! -d  ~/.arduino15 ]; then
	printf "get... "
	cd ~;
	curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh -;
	cd bin;
	git clone https://github.com/xorgnak/node
	./arduino-cli config init;
	editor ~/.arduino15/arduino-cli.yaml
	./arduino-cli core update-index;
	printf "got! "
fi
printf "OK."

echo ""
echo "[nomadic] READY."
cd ~/cabage && ./now $*;
echo "[nomadic] GOODBYE."
exit 0
